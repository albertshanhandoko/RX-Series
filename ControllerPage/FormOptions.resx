<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAqACoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9K6K+bf2nP2qZPg/4w0Lwbpc+m6Nf6hbNfXniPXrG7u7DT4d+
        xEEVsN0szkPtQugATLHkA8R4N/bXXQ9c0pPEPxF+HPxE8Lahcw2bal4YmOnapp8krhElnsZppC8AZlVn
        jIKA7ipAJoh+8+Hq7fPb89NQneCu/X5f12Psmivl39lH4qeK/Hnx2/aI0PX9Zm1LSvDfiCK00m2kRAtp
        ETPlFIAJHyr1J6V9RULWMZd0n96uD0lKPZtfcFFFFAHx9+1t+0b4m+GfxFutCtfHul/C7S7Hw0dcsb7V
        tEN8Nfu1kdWskdmCptCx5C/vP3oIyBXuXgO10H9oL4N+C/EnjDwpoerSa5o1pqU1nfWMd1Ckk0KOyqJF
        bjJwM9sVzv7cEayfslfFMsoYroc7LkZwcdR+dbv7Kn/Jsfwn/wCxV0z/ANJY6dNe5NPVpx/Fz/yS+XqO
        p8UWtL3/AAUP+C/mzwP9iNkg/aR/auJ2xxp4nh9gADc0eFfi98cv2vtU1zU/hRrWifC74ZabezadaeIN
        QsF1LUdUlThpEhf92sYyCM4OSBluQrf2JVivP2jv2sU3CSN/E8UbbT/tXII4/EV4d8MtN1HTf2UPFvhC
        ZFvtH+F/xFuv+Eo0d9X/ALL/ALU0tC7NGJ9yjPmMHCsyhvLAznAOUZWjT59lTg//AEhNvySd/wDhinH3
        6iju6kl+EnZebase1+LPjN8df2P/ABN4buvitrGi/FH4Za1fxaZP4h0/T107UNNmfhWeFPkKEBm4znaR
        lPlDfa4ORkcivyi+I8+o61/wTa8W65Jo954f8Kap40hv/Cmj6jcyXMtlprSxqgWST5tjOJmXthyQSCK/
        Vex/48bf/rmv8hXTZ+z97dO3/ksZWfmm2jFyXNG2zT/CTV15NW/pniX7UvwB8Z/tB+H4/D2gfFBvAXh+
        5tZ7TV9PXQotQGorJtxl2kRo9oVh8p53dsV5l4d/ZC+PXhPwtp3hzSP2qLmw0bTrSOwtLeLwPaZhhRAi
        KHM+7hQBnOeM5zX2DRWKVk0uv/B/zduxo3ez7f1+h5F+zV+zbon7NXg6+0nTtSv9f1bVrxtS1fXNTYNc
        X10wAZz6DrgZJ5JJYkmvINA/4J1+H2+L3i/xb4x8V33i/wAOa5rk2vx+DGgNtpyXTyMytcKJW+0lA2Fy
        FHXIIOK+vKKq751Pqlb8vysrdraC+y4dG7/n+d3fvfU8d/ag/Z4i/aO+DNx8P4NaTwrDJcW0yXcdiLlY
        1hcMEEQePggY+9x6V69bx+TBHHndsULn1wKkooTsmu7v87JfkkD1s+ysvTc//9k=
</value>
  </data>
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAoAGwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9K6KKKAGSSpDGXkdUQdWY4ApVZZFDKQysMhgcgiuL+NH/ACS/
        xB/1xX/0Na1/h/8A8iL4e/7B8H/ota7Hh/8AZViL/acbfJP9TD2v772Vul/xN+ivFdZvvGOh+MpbtbLx
        DqD/ANolljtSHsHscYVAmcLJnqTgjrXofgGx123025uvEM7NqN7O0/2USb0tEP3YlI447kV0YjA+wpKq
        6iadtnr/AEu5lDEc9R0+V6HT0UUV5Z2BRRWP4wa7XwnrBsPO+3C0lMH2cEyb9h27cc5zjGKuEeeSj3E9
        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
</value>
  </data>
</root>